/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dadosweb.Telas;

import java.text.Normalizer;
import java.util.regex.Pattern;
import BancoDados.DAO;
import BancoDados.InserirDados;
import BancoDados.ObterDados;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.net.URISyntaxException;
import java.text.DateFormat;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

/**
 *
 * @author andre
 */
public class Prognosticos extends javax.swing.JFrame {

    /**
     * Creates new form Progs
     */
    public Prognosticos() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePrognosticos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        dataIn = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dataIn2 = new javax.swing.JFormattedTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jBResultados = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaLog = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setText("Consultar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jTablePrognosticos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Data", "Competição", "Confronto", "Prognostico", "Placar", "Resultado", "Estatisticas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePrognosticos.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTablePrognosticosComponentAdded(evt);
            }
        });
        jTablePrognosticos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePrognosticosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePrognosticos);

        jLabel1.setText("De");

        dataIn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        dataIn.setText("00/00/000");

        jLabel2.setText("Até");

        jLabel3.setText("Status");

        dataIn2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        dataIn2.setText("00/00/0000");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ND", "Todos", "Grenn", "Red" }));

        jButton2.setText("Atualizar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jBResultados.setText("Resultados");
        jBResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBResultadosMouseClicked(evt);
            }
        });

        jScrollPane2.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane2.setEnabled(false);
        jScrollPane2.setFocusable(false);

        jTextAreaLog.setEditable(false);
        jTextAreaLog.setBackground(new java.awt.Color(204, 204, 204));
        jTextAreaLog.setColumns(20);
        jTextAreaLog.setRows(5);
        jTextAreaLog.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextAreaLogAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(jTextAreaLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(2, 2, 2)
                            .addComponent(dataIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dataIn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(54, 54, 54)
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jBResultados))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(dataIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(dataIn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jBResultados))))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String deAccent(String str) {
        String nfdNormalizedString = Normalizer.normalize(str, Normalizer.Form.NFD);
        Pattern pattern = Pattern.compile("\\p{InCombiningDiacriticalMarks}+");
        return pattern.matcher(nfdNormalizedString).replaceAll("");
    }

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked

        while (jTablePrognosticos.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTablePrognosticos.getModel()).removeRow(0);
        }

        Date data = new Date();
      
      DateFormat dfs = DateFormat.getDateInstance(DateFormat.SHORT);
      
      String[] dat = dfs.format(data).split("/");
        
        String sql = null;

        sql = "select *from prognosticos where data < \""+"20"+dat[2]+"-"+dat[1]+"-"+dat[0]+"\"";

        DefaultTableModel listaProg = (DefaultTableModel) jTablePrognosticos.getModel();

        try {
            ObterDados obt = new ObterDados();

            for (DAO d : obt.ProgSalvo(sql)) {
                Object[] dados = {d.getIdPrognostico(), d.getData(),
                    deAccent(d.getCompeticao()), deAccent(d.getTimeCasa())
                    + " x " + deAccent(d.getTimeFora()),
                    d.getProg(), d.getPlacar(), d.getResult(), d.getLink()};
                listaProg.addRow(dados);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Banco de dados indidponivel!");
        }


    }//GEN-LAST:event_jButton1MouseClicked

    private void jTablePrognosticosComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTablePrognosticosComponentAdded
        // TODO add your handling code here:

    }//GEN-LAST:event_jTablePrognosticosComponentAdded

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        jTablePrognosticos.getColumnModel().getColumn(0).setMaxWidth(30);
        jTablePrognosticos.getColumnModel().getColumn(0).setMinWidth(30);

        jTablePrognosticos.getColumnModel().getColumn(1).setMaxWidth(50);
        jTablePrognosticos.getColumnModel().getColumn(1).setMinWidth(50);

        jTablePrognosticos.getColumnModel().getColumn(2).setMaxWidth(170);
        jTablePrognosticos.getColumnModel().getColumn(2).setMinWidth(170);

        jTablePrognosticos.getColumnModel().getColumn(3).setMaxWidth(150);
        jTablePrognosticos.getColumnModel().getColumn(3).setMinWidth(150);

        jTablePrognosticos.getColumnModel().getColumn(4).setMaxWidth(100);
        jTablePrognosticos.getColumnModel().getColumn(4).setMinWidth(100);

        jTablePrognosticos.getColumnModel().getColumn(5).setMaxWidth(50);
        jTablePrognosticos.getColumnModel().getColumn(5).setMinWidth(50);

        jTablePrognosticos.getColumnModel().getColumn(6).setMaxWidth(50);
        jTablePrognosticos.getColumnModel().getColumn(6).setMinWidth(50);

        jTablePrognosticos.getColumnModel().getColumn(7).setMaxWidth(50);
        jTablePrognosticos.getColumnModel().getColumn(7).setMinWidth(50);

        jTablePrognosticos.setRowHeight(30);
        JTableUtilities.setCellsAlignment(jTablePrognosticos, SwingConstants.CENTER, 1);
        JTableUtilities.setCellsAlignment(jTablePrognosticos, SwingConstants.CENTER, 3);


    }//GEN-LAST:event_formWindowOpened

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked

        new Thread(){
            public void run(){
                
            
        
        
        

            InserirDados dad = null;
                try {
                    dad = new InserirDados();
                } catch (IOException ex) {
                    Logger.getLogger(Prognosticos.class.getName()).log(Level.SEVERE, null, ex);
                }

            Document doc = null;

            String[] p = null;
            String h2h = null;
            String ou1 = null;
            String ou2 = null;
            String resultado = null;
            String[] resultadoprog = null;
            

            for (int x = 0; x < jTablePrognosticos.getRowCount(); x++) {
    try {
        
                        
        
                if ("ND".equals(jTablePrognosticos.getValueAt(x, 6).toString().trim())) {

                    jTextAreaLog.setText(jTextAreaLog.getText() + "\n" 
                                +jTablePrognosticos.getValueAt(x, 3).toString() +" Analisando");
                    
                    doc = Jsoup.connect(jTablePrognosticos.getValueAt(x, 7)
                            .toString()).get();

                    p = doc.getElementsByClass("f-score odd").text().split("-");

                    if (p.length > 0) {
                        if (!p[0].equals("")) {

                            if (Integer.parseInt(p[0].trim()) > Integer.parseInt(p[1].trim())) {
                                h2h = "Casa";
                            }

                            if (Integer.parseInt(p[0].trim()) < Integer.parseInt(p[1].trim())) {
                                h2h = "Fora";
                            }

                            if (Integer.parseInt(p[0].trim()) == Integer.parseInt(p[1].trim())) {
                                h2h = "Empate";
                            }

                            if ((Integer.parseInt(p[0].trim()) + Integer.parseInt(p[1].trim())) > 2) {
                                ou2 = "Over 2.5";
                            } else {
                                ou2 = "Under 2.5";
                            }

                            if ((Integer.parseInt(p[0].trim()) + Integer.parseInt(p[1].trim())) > 1) {
                                ou1 = "Over 1.5";
                            } else {
                                ou1 = "Under 1.5";
                            }

                            resultadoprog = jTablePrognosticos.getValueAt(x, 4)
                                    .toString().split("-");

                            if (resultadoprog[1].trim().equals(h2h)
                                    || resultadoprog[1].trim().equals(ou2)
                                    || resultadoprog[1].trim().equals(ou1)) {
                                resultado = "Green";
                            } else {
                                resultado = "Red";
                            }

                            dad.update(jTablePrognosticos.getValueAt(x, 0).toString(), p[0] + "-" + p[1], resultado);

                            }
                        } else {
                            jTextAreaLog.setText(jTextAreaLog.getText() + "\n"
                                    + jTablePrognosticos.getValueAt(x, 3).toString() + " não encontrado");
                        }
                        jTextAreaLog.setText(jTextAreaLog.getText() + "\n" 
                                +jTablePrognosticos.getValueAt(x, 3).toString() +" Concluido");
                    }

                }catch (IOException ex) {
            //JOptionPane.showMessageDialog(null, "Erro nos dados:\n" + ex);
            ((DefaultTableModel) jTablePrognosticos.getModel()).removeRow(x);
        }
                }
                JOptionPane.showMessageDialog(null, "Concluido");

            

        }
        }.start();
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void jBResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBResultadosMouseClicked

        DadosResult dr = new DadosResult();
        dr.show();

    }//GEN-LAST:event_jBResultadosMouseClicked

    private void jTextAreaLogAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextAreaLogAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextAreaLogAncestorAdded

    private void jTablePrognosticosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrognosticosMouseClicked

        if (jTablePrognosticos.getSelectedColumn() == 7) {
            Funcoes f = new Funcoes();
            try {
                f.abrirLink(jTablePrognosticos.getValueAt(jTablePrognosticos.getSelectedRow(), 7).toString());
            } catch (IOException | URISyntaxException ex) {
                Logger.getLogger(Prognosticos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jTablePrognosticosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Prognosticos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Prognosticos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Prognosticos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Prognosticos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Prognosticos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField dataIn;
    private javax.swing.JFormattedTextField dataIn2;
    private javax.swing.JButton jBResultados;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePrognosticos;
    private javax.swing.JTextArea jTextAreaLog;
    // End of variables declaration//GEN-END:variables
}
