
/*ии
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dadosweb.Telas;

import BancoDados.InserirDados;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import java.lang.System;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.Normalizer;
import java.util.Arrays;
import java.util.Date;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;

/**
 *
 * @author andre
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        PrincipalInfo = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jBCarregarArq = new javax.swing.JButton();
        Labelprogresso = new javax.swing.JLabel();
        ProgressBar = new javax.swing.JProgressBar();
        progAnalises = new javax.swing.JProgressBar();
        lanalise = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        labelQtdJogos = new javax.swing.JLabel();
        LabelQtdAnalises = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableConfrontos = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TableAnalises = new javax.swing.JTable();
        lteste = new javax.swing.JLabel();
        lteste1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jBPrognosticos = new javax.swing.JButton();
        jBSelecionarComp = new javax.swing.JButton();
        LabelNCompeticao = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Fora");

        PrincipalInfo.setBackground(new java.awt.Color(0, 0, 0));
        PrincipalInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(0, 153, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Iniciar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        PrincipalInfo.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 93, -1));
        jButton1.getAccessibleContext().setAccessibleDescription("teste");

        jButton2.setBackground(new java.awt.Color(255, 153, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Abrir Arquivo");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        PrincipalInfo.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jBCarregarArq.setBackground(new java.awt.Color(204, 0, 0));
        jBCarregarArq.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBCarregarArq.setForeground(new java.awt.Color(255, 255, 255));
        jBCarregarArq.setText("Carregar Arquivo");
        jBCarregarArq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBCarregarArqMouseClicked(evt);
            }
        });
        jBCarregarArq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCarregarArqActionPerformed(evt);
            }
        });
        PrincipalInfo.add(jBCarregarArq, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, -1, -1));

        Labelprogresso.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Labelprogresso.setForeground(new java.awt.Color(255, 255, 255));
        Labelprogresso.setText("Concluido");
        PrincipalInfo.add(Labelprogresso, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 198, -1, -1));

        ProgressBar.setStringPainted(true);
        PrincipalInfo.add(ProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 219, 1024, -1));
        PrincipalInfo.add(progAnalises, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 390, 8));

        lanalise.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lanalise.setForeground(new java.awt.Color(51, 153, 0));
        lanalise.setText("analise");
        PrincipalInfo.add(lanalise, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 11, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Jogos Hoje");

        labelQtdJogos.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        labelQtdJogos.setForeground(new java.awt.Color(0, 204, 0));
        labelQtdJogos.setText("0 Jogos/");

        LabelQtdAnalises.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        LabelQtdAnalises.setForeground(new java.awt.Color(255, 153, 0));
        LabelQtdAnalises.setText("0 analises");

        TableConfrontos.setBackground(new java.awt.Color(0, 0, 0));
        TableConfrontos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TableConfrontos.setForeground(new java.awt.Color(255, 255, 255));
        TableConfrontos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableConfrontos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TableConfrontos.setSelectionBackground(new java.awt.Color(51, 51, 51));
        TableConfrontos.setShowVerticalLines(false);
        TableConfrontos.getTableHeader().setReorderingAllowed(false);
        TableConfrontos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableConfrontosMouseClicked(evt);
            }
        });
        TableConfrontos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                TableConfrontosPropertyChange(evt);
            }
        });
        jScrollPane3.setViewportView(TableConfrontos);
        if (TableConfrontos.getColumnModel().getColumnCount() > 0) {
            TableConfrontos.getColumnModel().getColumn(0).setResizable(false);
            TableConfrontos.getColumnModel().getColumn(1).setResizable(false);
            TableConfrontos.getColumnModel().getColumn(2).setResizable(false);
            TableConfrontos.getColumnModel().getColumn(3).setResizable(false);
            TableConfrontos.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Analise");

        TableAnalises.setBackground(new java.awt.Color(0, 0, 0));
        TableAnalises.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TableAnalises.setForeground(new java.awt.Color(255, 255, 255));
        TableAnalises.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableAnalises.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TableAnalises.setSelectionBackground(new java.awt.Color(51, 51, 51));
        TableAnalises.setShowVerticalLines(false);
        TableAnalises.getTableHeader().setReorderingAllowed(false);
        TableAnalises.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableAnalisesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TableAnalises);
        if (TableAnalises.getColumnModel().getColumnCount() > 0) {
            TableAnalises.getColumnModel().getColumn(0).setResizable(false);
            TableAnalises.getColumnModel().getColumn(1).setResizable(false);
            TableAnalises.getColumnModel().getColumn(2).setResizable(false);
            TableAnalises.getColumnModel().getColumn(3).setResizable(false);
        }

        lteste.setText("jLabel11");

        lteste1.setText("jLabel11");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Casa");

        jBPrognosticos.setText("Prognosticos Salvos");
        jBPrognosticos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBPrognosticosMouseClicked(evt);
            }
        });

        jBSelecionarComp.setText("Selecionar Comp");
        jBSelecionarComp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBSelecionarCompMouseClicked(evt);
            }
        });

        LabelNCompeticao.setBackground(new java.awt.Color(51, 51, 51));
        LabelNCompeticao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LabelNCompeticao.setForeground(new java.awt.Color(255, 255, 255));
        LabelNCompeticao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelNCompeticao.setText("Competiчуo");
        LabelNCompeticao.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jBSelecionarComp, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jBPrognosticos))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel8)
                .addGap(11, 11, 11)
                .addComponent(labelQtdJogos)
                .addGap(42, 42, 42)
                .addComponent(LabelQtdAnalises))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel4)
                .addGap(137, 137, 137)
                .addComponent(jLabel2)
                .addGap(69, 69, 69)
                .addComponent(jLabel9))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(LabelNCompeticao, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(399, 399, 399)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lteste, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lteste1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(PrincipalInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jBSelecionarComp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBPrognosticos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(labelQtdJogos)
                    .addComponent(LabelQtdAnalises))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel9))
                .addGap(3, 3, 3)
                .addComponent(LabelNCompeticao)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lteste, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lteste1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(PrincipalInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 707, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        //formatando tabela de analises
        TableAnalises.getColumnModel().getColumn(0).setMaxWidth(40);
        TableAnalises.getColumnModel().getColumn(0).setMinWidth(40);

        TableAnalises.getColumnModel().getColumn(1).setMaxWidth(400);
        TableAnalises.getColumnModel().getColumn(1).setMinWidth(400);

        TableAnalises.getColumnModel().getColumn(2).setMaxWidth(40);
        TableAnalises.getColumnModel().getColumn(2).setMinWidth(40);

        TableAnalises.getColumnModel().getColumn(3).setMaxWidth(0);
        TableAnalises.getColumnModel().getColumn(3).setMinWidth(0);

        TableAnalises.getTableHeader().setUI(null);

        TableAnalises.setRowHeight(50);
        JTableUtilities.setCellsAlignment(TableAnalises, SwingConstants.CENTER, 1);

        TableColumnModel columnModel = TableAnalises.getColumnModel();
        JTableRendererImageCell renderer = new JTableRendererImageCell();

        columnModel.getColumn(0).setCellRenderer(renderer);
        columnModel.getColumn(2).setCellRenderer(renderer);
        new Thread() {
            public void run() {

                //#################JOGOS DE HOJE#####################
                int progresso = 0;
                TableConfrontos.getColumnModel().getColumn(0).setMaxWidth(150);
                TableConfrontos.getColumnModel().getColumn(1).setMaxWidth(30);
                TableConfrontos.getColumnModel().getColumn(2).setMaxWidth(150);
                TableConfrontos.getColumnModel().getColumn(3).setMaxWidth(30);
                TableConfrontos.getColumnModel().getColumn(0).setMinWidth(150);
                TableConfrontos.getColumnModel().getColumn(1).setMinWidth(20);
                TableConfrontos.getColumnModel().getColumn(2).setMinWidth(150);
                TableConfrontos.getColumnModel().getColumn(3).setMinWidth(30);

                TableConfrontos.getColumnModel().setColumnMargin(2);
                TableConfrontos.getTableHeader().setUI(null);

                try {
                    progresso = 10;
                    Labelprogresso.setText("Acessando dados...");

                    final String url = "https://www.academiadasapostasbrasil.com/stats/livescores/popup";
                    String[] confronto;
                    Document doc;
                    doc = Jsoup.connect(url).get();
                    int qtd = doc.getElementsByClass("stats").size();
                    ProgressBar.setValue(progresso);
                    Labelprogresso.setText("Tratando Informaчїes...");
                    DefaultTableModel Tconfronto = (DefaultTableModel) TableConfrontos.getModel();
                    for (int i = 1; i < qtd; i++) {
                        progresso = progresso + 90 / qtd;
                        ProgressBar.setValue(progresso);
                        Element stats = doc.getElementsByClass("stats").get(i);
                        String link = stats.select("a").attr("href");
                        confronto = link.split("/");
                        //System.out.println(Arrays.toString(confronto));

                        Object[] inserir = {confronto[7], "x", confronto[8], link};
                        Tconfronto.addRow(inserir);

                    }
                    Labelprogresso.setText("Concluido");
                    ProgressBar.setValue(100);
                    labelQtdJogos.setText(qtd / 2 + " Jogos");
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Nуo foi Possэvel conectar a base de dados\nVerifique a conexуo com a internet!");
                    Labelprogresso.setText("Concluido");
                    ProgressBar.setValue(100);
                }

            }
        }.start();

        jBSelecionarComp.setVisible(true);


    }//GEN-LAST:event_formWindowOpened

    private void TableAnalisesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableAnalisesMouseClicked
        // TODO add your handling code here:

        new Thread() {
            public void run() {

                ProgressBar.setValue(10);
                Labelprogresso.setText("Carregando ...");
                Analise a = new Analise();
                a.lastGames(TableAnalises.getValueAt(TableAnalises.getSelectedRow(), 3).toString());
                try {
                    a.desempenho(TableAnalises.getValueAt(TableAnalises.getSelectedRow(), 3).toString());
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }

                ProgressBar.setValue(100);
                Labelprogresso.setText("Concluido");

                a.show();
                a.setExtendedState(JFrame.MAXIMIZED_BOTH);

            }
        }.start();
    }//GEN-LAST:event_TableAnalisesMouseClicked

    private void TableConfrontosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_TableConfrontosPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_TableConfrontosPropertyChange

    private void TableConfrontosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableConfrontosMouseClicked
        // TODO add your handling code here:

        Analise a = new Analise();
        int progresso = 0;

        new Thread() {
            public void run() {
                if (TableConfrontos.getSelectedColumn() == 3) {
                    ProgressBar.setValue(10);
                    Labelprogresso.setText("Criando tabelas...");
                    a.lastGames(TableConfrontos.getValueAt(TableConfrontos.getSelectedRow(), 3).toString());

                    ProgressBar.setValue(35);
                    Labelprogresso.setText("Extraindo dados");

                    try {
                        ArrayList dados = new ArrayList();
                        dados = a.desempenho(TableConfrontos.getValueAt(TableConfrontos.getSelectedRow(), 3).toString());

                        DefaultTableModel analises = (DefaultTableModel) TableAnalises.getModel();
                        DefaultTableModel confrontos = (DefaultTableModel) TableConfrontos.getModel();
                        if (!dados.get(2).equals("")) {
                            Object[] inserir = {"", dados.get(0) + " x " + dados.get(1) + "   " + dados.get(2) + " - " + dados.get(3),
                                "", TableConfrontos.getValueAt(TableConfrontos.getSelectedRow(), 3).toString()};
                            analises.addRow(inserir);
                            //confrontos.removeRow(TableConfrontos.getSelectedRow());
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        //JOptionPane.showMessageDialog(null, "Anсlise nуo disponivel");
                        ProgressBar.setValue(0);
                        Labelprogresso.setText("Erro na analise");
                        DefaultTableModel erro = (DefaultTableModel) TableConfrontos.getModel();
                        //erro.removeRow(TableConfrontos.getSelectedRow());

                    }

                    a.show();
                    a.setSize(760, 600);
                    a.setLocation(300, 10);

                    ProgressBar.setValue(100);
                    Labelprogresso.setText("Concluido");

                }
            }
        }.start();

    }//GEN-LAST:event_TableConfrontosMouseClicked

    private void jBCarregarArqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCarregarArqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBCarregarArqActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    public String data(String data) {
        String coc[] = data.split(" ");

        switch (coc[1]) {

            case "janeiro":
                coc[1] = "01";
                break;

            case "fevereiro":
                coc[1] = "02";
                break;

            case "marчo":
                coc[1] = "03";
                break;

            case "abril":
                coc[1] = "04";
                break;

            case "maio":
                coc[1] = "05";
                break;

            case "junho":
                coc[1] = "06";
                break;

            case "julho":
                coc[1] = "07";
                break;

            case "agosto":
                coc[1] = "08";
                break;

            case "setembro":
                coc[1] = "09";
                break;

            case "outubro":
                coc[1] = "10";
                break;

            case "novembro":
                coc[1] = "11";
                break;

            case "dezembro":
                coc[1] = "12";
                break;

        }

        return coc[2] + coc[1] + coc[0];

    }

    public static String deAccent(String str) {
        String nfdNormalizedString = Normalizer.normalize(str, Normalizer.Form.NFD);
        Pattern pattern = Pattern.compile("\\p{InCombiningDiacriticalMarks}+");
        return pattern.matcher(nfdNormalizedString).replaceAll("");
    }

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:

        new Thread() {
            public void run() {

                Funcoes f = new Funcoes();

                String urlLive = "";

                for (int i = 0; i < TableConfrontos.getRowCount(); i++) {

                    if (!f.buscarDuplo(TableConfrontos.getValueAt(i, 3).toString())) {

                        Analise a = new Analise();
                        progAnalises.setMaximum(TableConfrontos.getRowCount());
                        progAnalises.setValue(0);

                        lanalise.setText("Obtendo Dados " + TableConfrontos.getValueAt(i, 0) + " x " + TableConfrontos.getValueAt(i, 2));
                        progAnalises.setValue(i + 1);
                        try {
                            sleep(2000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        a.lastGames(TableConfrontos.getValueAt(i, 3).toString());

                        lanalise.setText("montando tabelas " + TableConfrontos.getValueAt(i, 0) + " x " + TableConfrontos.getValueAt(i, 2));

                        try {
                            ArrayList dados = new ArrayList();

                            for (int x = 0; x < dados.size(); x++) {
                                dados.remove(x);
                            }

                            dados = a.desempenhoLoop(TableConfrontos.getValueAt(i, 3).toString());
                            lanalise.setText("Iniciando a anaise " + TableConfrontos.getValueAt(i, 0) + " x " + TableConfrontos.getValueAt(i, 2));

                            lanalise.setText("Colando fotos " + TableConfrontos.getValueAt(i, 0) + " x " + TableConfrontos.getValueAt(i, 2));

                            Document doc;
                            Document docLive = null;
                            doc = Jsoup.connect(TableConfrontos.getValueAt(i, 3).toString()).get();
                            Elements stats = doc.getElementsByClass("stats-game-head-teamname hide-mobile");
                            Elements live;

                            String linkconf = "";

                            lanalise.setText("Obtendo prognostico " + TableConfrontos.getValueAt(i, 0) + " x " + TableConfrontos.getValueAt(i, 2));

                            try {

                                DefaultTableModel analises = (DefaultTableModel) TableAnalises.getModel();
                                DefaultTableModel confrontos = (DefaultTableModel) TableConfrontos.getModel();

                                //INSERINDO PROGNOSTICO NA TABELA
                                String data;
                                String sql = "INSERT INTO prognosticos("
                                        + "data,competicao,timeCasa,timeFora,prog,"
                                        + "result,link,logoTimes,placar)"
                                        + "VALUES(?,?,?,?,?,?,?,?,?)";
                                if (!dados.get(2).equals("")) {

                                    linkconf = TableConfrontos.getValueAt(i, 3).toString();
                                    docLive = Jsoup.connect(linkconf.replace("prelive", "live")).get();

                                    Object[] inserir = {f.buscarImagem(LabelNCompeticao.getText(), deAccent(dados.get(0).toString()), 30, 30),
                                        dados.get(0) + " x " + dados.get(1) + "   " + dados.get(2),
                                        f.buscarImagem(LabelNCompeticao.getText(), deAccent(dados.get(1).toString()), 30, 30), linkconf};
                                    analises.addRow(inserir);

                                    ArrayList l = null;
                                    String campanha;
                                    l = f.CampanhaTimes(dados.get(0).toString(), dados.get(1).toString(), dados.get(2).toString());
                                    if (l != null) {
                                        campanha = l.get(0) + "% | " + dados.get(0).toString() + " x "
                                                + dados.get(1).toString() + " | " + l.get(3) + "%";

                                    } else {
                                        campanha = "";
                                    }
                                    
                                    f.salvarEscudos(LabelNCompeticao.getText());
                                    

                                    Object[] inserirCampanha = {f.buscarImagem(LabelNCompeticao.getText(),
                                        deAccent(dados.get(0).toString()), 30, 30),
                                        campanha,
                                        f.buscarImagem(LabelNCompeticao.getText(), deAccent(dados.get(1).toString()), 30, 30)};
                                    analises.addRow(inserirCampanha);

                                    //inserindo no banco
                                    data = docLive.getElementsByClass("gamehead").get(1).text();
                                    data = data.substring(0, data.length() - 8);
                                    InserirDados id = new InserirDados();

                                    id.inserir(data(data),
                                            deAccent(docLive.getElementsByClass("gamehead").get(2).text()),
                                            deAccent(dados.get(0).toString()), deAccent(dados.get(1).toString()),
                                            deAccent(dados.get(2).toString()),
                                            f.testarProg(deAccent(dados.get(2).toString()),
                                                    TableConfrontos.getValueAt(i, 1).toString()), linkconf,
                                            docLive.getElementsByClass("stats-game-head-teamname hide-mobile")
                                                    .get(0).select("a").select("img").attr("src") + ","
                                            + docLive.getElementsByClass("stats-game-head-teamname hide-mobile")
                                                    .get(1).select("a").select("img").attr("src"),
                                            sql, TableConfrontos.getValueAt(i, 1).toString());

                                    dados.clear();
                                    LabelQtdAnalises.setText(TableAnalises.getRowCount() + " " + "analises");

                                    //confrontos.removeRow(i);
                                }

                            } catch (Exception e) {
                                lanalise.setText("erro");

                                for (int col = 0; col < TableConfrontos.getColumnCount(); col++) {
                                    TableConfrontos.getColumnModel().getColumn(col).setCellRenderer(
                                            f.ColorLinha(TableConfrontos, i, Color.red, Color.white));
                                }

                            }
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                            //JOptionPane.showMessageDialog(null, "Anсlise nуo disponivel");
                            ProgressBar.setValue(0);
                            Labelprogresso.setText("Erro na analise");
                            DefaultTableModel erro = (DefaultTableModel) TableConfrontos.getModel();
                            //JOptionPane.showMessageDialog(null, "Catch");
                            //erro.removeRow(TableConfrontos.getSelectedRow());
                            for (int col = 0; col < TableConfrontos.getColumnCount(); col++) {
                                TableConfrontos.getColumnModel().getColumn(col).setCellRenderer(
                                        f.ColorLinha(TableConfrontos, i, Color.red, Color.white));
                            }

                        }

                        lanalise.setText("concluido");

                        for (int col = 0; col < TableConfrontos.getColumnCount(); col++) {
                            TableConfrontos.getColumnModel().getColumn(col).setCellRenderer(
                                    f.ColorLinha(TableConfrontos, i, Color.blue, Color.white));
                        }

                    }
                }
            }
        }.start();


    }//GEN-LAST:event_jButton1MouseClicked

    private void jBCarregarArqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBCarregarArqMouseClicked
        // TODO add your handling code here:

        new Thread() {
            public void run() {

                Path caminho = Paths.get("D:\\documentos\\engenharia\\projetos\\DadosWeb\\src\\dadosweb\\Confrontos.txt");

                String leitura = null;
                Document doc = null;

                try {
                    byte[] texto = Files.readAllBytes(caminho);
                    leitura = new String(texto);

                } catch (Exception e) {
                    System.out.println("Arquivo nao encontrado");
                }

                try {

                    doc = Jsoup.parse(leitura);

                } catch (Exception e) {
                    System.out.println("Nao foi possivel conectar a base de dados!");
                }

                while (TableConfrontos.getRowCount() > 0) {
                    ((DefaultTableModel) TableConfrontos.getModel()).removeRow(0);
                }

                int progresso = 10;
                Labelprogresso.setText("Acessando dados...");
                String[] confronto;
                int qtd = doc.getElementsByClass("stats").size();
                ProgressBar.setValue(progresso);
                Labelprogresso.setText("Tratando Informaчїes...");
                DefaultTableModel Tconfronto = (DefaultTableModel) TableConfrontos.getModel();
                for (int i = 1; i < qtd - 2; i++) {
                    progresso = progresso + 90 / qtd;
                    ProgressBar.setValue(progresso);
                    Element stats = doc.getElementsByClass("stats").get(i);
                    String link = stats.select("a").attr("href");
                    confronto = link.split("/");
                    //System.out.println(Arrays.toString(confronto));

                    try {
                        Object[] inserir = {confronto[7], "x", confronto[8], link};
                        Tconfronto.addRow(inserir);

                    } catch (Exception e) {
                        System.out.println(e);
                    }

                }
                Labelprogresso.setText("Concluido");
                ProgressBar.setValue(100);
                labelQtdJogos.setText(qtd + " Jogos");

            }
        }.start();


    }//GEN-LAST:event_jBCarregarArqMouseClicked

    private void jBPrognosticosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBPrognosticosMouseClicked

        Prognosticos prog = new Prognosticos();
        prog.show();


    }//GEN-LAST:event_jBPrognosticosMouseClicked

    selecComp competicoes = new selecComp(this, rootPaneCheckingEnabled);

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        try {
            Runtime.getRuntime().exec("notepad D:\\documentos\\engenharia\\projetos\\DadosWeb\\src\\dadosweb\\Confrontos.txt");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Nуo foi posivel abrir o arquivo\n" + ex);
        }
    }//GEN-LAST:event_jButton2MouseClicked

    ArrayList<Object[]> linhas = new ArrayList<>();


    private void jBSelecionarCompMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBSelecionarCompMouseClicked

        if ("concluido".equals(lanalise.getText()) || "analise".equals(lanalise.getText())) {

            DefaultTableModel novoProcesso = (DefaultTableModel) TableConfrontos.getModel();

            while (novoProcesso.getRowCount() > 0) {
                novoProcesso.removeRow(novoProcesso.getRowCount() - 1);
            }

            this.competicoes.setVisible(true);

            linhas = competicoes.getLinhas();

            String[] nomecomp = competicoes.getNomeComp().split("-");

            if (!linhas.isEmpty()) {

                linhas.forEach((linha) -> {
                    novoProcesso.addRow(linha);
                    LabelNCompeticao.setText(nomecomp[0].trim());

                });

                labelQtdJogos.setText(TableConfrontos.getRowCount() + " Jogos");

            }

        }


    }//GEN-LAST:event_jBSelecionarCompMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelNCompeticao;
    private javax.swing.JLabel LabelQtdAnalises;
    private javax.swing.JLabel Labelprogresso;
    private javax.swing.JPanel PrincipalInfo;
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JTable TableAnalises;
    private javax.swing.JTable TableConfrontos;
    private javax.swing.JButton jBCarregarArq;
    private javax.swing.JButton jBPrognosticos;
    private javax.swing.JButton jBSelecionarComp;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelQtdJogos;
    private javax.swing.JLabel lanalise;
    private javax.swing.JLabel lteste;
    private javax.swing.JLabel lteste1;
    private javax.swing.JProgressBar progAnalises;
    // End of variables declaration//GEN-END:variables
}
